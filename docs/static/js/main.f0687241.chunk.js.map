{"version":3,"sources":["components/main/settings/lang-ru.js","components/interfaceComponents/RhytmItems.js","components/main/Loader.js","components/EditSong.js","App.js","reportWebVitals.js","index.js"],"names":["Lang","addSongTitle","coupletTitle","chorusTitle","songComment","songName","songText","songVideo","chordCouplet","chordChorus","rhytmCouplet","rhytmChorus","songTextHelper","chordHelper","rhytmHelper","songCommentHelper","songVideoHelper","presets","rhytm8","rhytm6","rhytm4","rhytmGalop","saveButton","cancelButton","previewButton","RhytmItems","TextField","label","this","props","type","className","helperText","InputProps","readOnly","value","Button","variant","startIcon","name","rhytmtype","onClick","onChange","style","backgroundColor","React","Component","display","justifyContent","margin","EditSongForm","onChangeInput","event","target","test","setState","songData","state","onChangeRhytm","key","currentTarget","getAttribute","loading","handleSubmit","bind","preventDefault","axios","post","then","response","catch","error","console","log","onSubmit","multiline","Loader","sendData","App","EditSong","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0687241.chunk.js","sourcesContent":["// TODO разбить на категории\r\nconst Lang = {\r\n    addSongTitle:   'Добавить песню',\r\n    coupletTitle:   'Куплет',\r\n    chorusTitle:    'Припев',\r\n\r\n    songComment:    'Комментарий к песне',\r\n    songName:       'Название песни',\r\n    songText:       'Текст песни',\r\n    songVideo:      'Видео с Youtube',\r\n\r\n    chordCouplet:   'Аккорды куплета',\r\n    chordChorus:    'Аккорды припева',\r\n    rhytmCouplet:   'Ритм куплета',\r\n    rhytmChorus:    'Ритм припева',\r\n\r\n    songTextHelper: 'Скопируйте сюда текст целиком',\r\n    chordHelper:    'Впишите аккорды через пробел',\r\n    rhytmHelper:    'Набейте ритм кнопками, либо выберите пресет',\r\n    songCommentHelper: 'Опишите особенности игры, темп ритма',\r\n    songVideoHelper:    'Скопируйте сюда ссылку на видео с Youtube',\r\n\r\n    presets:        'Пресеты',\r\n    rhytm8:         'Бой 8',\r\n    rhytm6:         'Бой 6',\r\n    rhytm4:         'Бой 4',\r\n    rhytmGalop:     'Галоп',\r\n\r\n    saveButton:     'Сохранить',\r\n    cancelButton:   'Отмена',\r\n    previewButton:  'Предпросмотр'\r\n};\r\n\r\nexport default Lang;","/**\r\n *  Возвращает интерфейс для ввода ритмического рисунка\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Lang from \"../main/settings/lang-ru\";\r\nimport EditSongForm from \"../EditSong\";\r\n\r\nclass RhytmItems extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <TextField label={Lang[this.props.type]} className='mt-1 form-view-half' helperText={Lang.rhytmHelper} InputProps={{readOnly: true}} value={this.props.value}/>\r\n                <div className='buttons-panel mt-1'>\r\n                    <Button variant=\"outlined\" startIcon={<ArrowUpwardIcon />} className='icon-square-button' name='arrowUp' rhytmtype={this.props.type} onClick={this.props.onChange}/>\r\n                    <Button variant=\"outlined\" startIcon={<ArrowDownwardIcon />} className='icon-square-button' name='arrowDown' rhytmtype={this.props.type} onClick={this.props.onChange}/>\r\n                    <Button variant=\"outlined\" startIcon={<ExpandLessIcon />} className='icon-square-button' name='arrowUpLess' rhytmtype={this.props.type} onClick={this.props.onChange}/>\r\n                    <Button variant=\"outlined\" startIcon={<ExpandMoreIcon />} className='icon-square-button' name='arrowDownLess' rhytmtype={this.props.type} onClick={this.props.onChange}/>\r\n                    <Button variant=\"outlined\" startIcon={<ClearIcon />} className='icon-square-button' name='jamming' rhytmtype={this.props.type} onClick={this.props.onChange}/>\r\n                    <Button variant=\"outlined\" startIcon={<BackspaceIcon />} className='icon-square-button' style={{backgroundColor: '#D23333'}} name='clear' rhytmtype={this.props.type} onClick={this.props.onChange}/>\r\n                </div>\r\n                <div className='buttons-panel'>\r\n                    {/*TODO заменить кнопки на выпадающий список*/}\r\n                    <Button variant=\"contained\" className='preset-button' name='rhytm8' rhytmtype={this.props.type} onClick={this.props.onChange}>{Lang.rhytm8}</Button>\r\n                    <Button variant=\"contained\" className='preset-button' name='rhytm6' rhytmtype={this.props.type} onClick={this.props.onChange}>{Lang.rhytm6}</Button>\r\n                    <Button variant=\"contained\" className='preset-button' name='rhytm4' rhytmtype={this.props.type} onClick={this.props.onChange}>{Lang.rhytm4}</Button>\r\n                    <Button variant=\"contained\" className='preset-button' name='rhytmGalop' rhytmtype={this.props.type} onClick={this.props.onChange}>{Lang.rhytmGalop}</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RhytmItems;","import React from 'react'\r\n\r\nexport default () => (\r\n    <div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem' }}>\r\n        <div className='lds-dual-ring' />\r\n    </div>\r\n)","/**\r\n * Форма для добавления трека\r\n */\r\n\r\nimport React from 'react';\r\nimport Lang from './main/settings/lang-ru';\r\nimport RhytmItems from './interfaceComponents/RhytmItems';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport Loader from './main/Loader';\r\n\r\nclass EditSongForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading:  false,\r\n            songData: {\r\n                chordCouplet:   '',\r\n                chordChorus:    '',\r\n                songName:       '',\r\n                songComment:    '',\r\n                songText:       '',\r\n                songVideo:      '',\r\n                rhytmCouplet:   '',\r\n                rhytmChorus:    ''\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        axios.post('https://velum-song-default-rtdb.firebaseio.com/songs.json', this.state.songData)\r\n            .then(response => {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            })\r\n    }\r\n\r\n    onChangeInput = (event) => {\r\n        const chordMaskRe = /^[\\w\\s#]+$/;\r\n        const value = event.target.value;\r\n        const name =  event.target.name;\r\n\r\n        if(name === 'chordCouplet' || name === 'chordChorus') {\r\n            if (!value || chordMaskRe.test(value)) {\r\n                this.setState({\r\n                    songData: {\r\n                        ...this.state.songData,\r\n                        [name]: value\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                songData: {\r\n                    ...this.state.songData,\r\n                    [name]: value\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    onChangeRhytm = (event) => {\r\n        const key = event.currentTarget.name;\r\n        const rhytmtype = event.currentTarget.getAttribute('rhytmtype');\r\n        const rhytmBook = {\r\n            'arrowUp':        '🡹',\r\n            'arrowDown':      '🡻',\r\n            'arrowUpLess':    '🡅',\r\n            'arrowDownLess':  '🡇',\r\n            'jamming':        '✖',\r\n            'rhytm8':         '🡻🡻🡹🡻🡻🡹🡻🡹 (8)',\r\n            'rhytm6':         '🡻🡻🡹🡹🡻🡹 (6)',\r\n            'rhytm4':         '🡻🡹🡻🡹 (4)',\r\n            'rhytmGalop':     '🡻🡻🡹🡻🡻🡹🡻🡻🡹🡻'\r\n        };\r\n\r\n        if(key === 'clear') {\r\n            this.setState({\r\n                songData: {\r\n                    ...this.state.songData,\r\n                    [rhytmtype]: ''\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                songData: {\r\n                    ...this.state.songData,\r\n                    [rhytmtype]: this.state.songData[rhytmtype] + rhytmBook[key]\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <form className='form-view' onSubmit={this.handleSubmit}>\r\n                <h3>{Lang.addSongTitle}</h3>\r\n                <TextField\r\n                    label={Lang.songName}\r\n                    className='mt-3'\r\n                    name='songName'\r\n                    onChange={this.onChangeInput}\r\n                />\r\n                <TextField\r\n                    label={Lang.songComment}\r\n                    helperText={Lang.songCommentHelper}\r\n                    className='mt-3' multiline\r\n                    name='songComment'\r\n                    onChange={this.onChangeInput}\r\n                />\r\n                <div className='mt-5 flex-row-container'>\r\n                    <div>\r\n                        <h5>{Lang.coupletTitle}</h5>\r\n                        <TextField\r\n                            name=\"chordCouplet\"\r\n                            label={Lang.chordCouplet}\r\n                            helperText={Lang.chordHelper}\r\n                            className='form-view-half'\r\n                            onChange={this.onChangeInput}\r\n                        />\r\n                        <RhytmItems\r\n                            type={'rhytmCouplet'}\r\n                            value={this.state.songData.rhytmCouplet}\r\n                            onChange={this.onChangeRhytm}\r\n                        />\r\n                    </div>\r\n                    <div className='form-view-half'>\r\n                        <h5>{Lang.chorusTitle}</h5>\r\n                        <TextField\r\n                            name=\"chordChorus\"\r\n                            label={Lang.chordChorus}\r\n                            helperText={Lang.chordHelper}\r\n                            className='form-view-half'\r\n                            onChange={this.onChangeInput}\r\n                        />\r\n                        <RhytmItems\r\n                            type={'rhytmChorus'}\r\n                            value={this.state.songData.rhytmChorus}\r\n                            onChange={this.onChangeRhytm}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <TextField\r\n                    label={Lang.songText}\r\n                    className='mt-5'\r\n                    multiline\r\n                    helperText={Lang.songTextHelper}\r\n                    onChange={this.onChangeInput}\r\n                    name='songText'\r\n                />\r\n                <TextField\r\n                    label={Lang.songVideo}\r\n                    className='mt-3'\r\n                    multiline\r\n                    helperText={Lang.songVideoHelper}\r\n                    onChange={this.onChangeInput}\r\n                    name='songVideo'\r\n                />\r\n\r\n                {this.state.loading ? <Loader /> :\r\n                <div className='form-buttons-container'>\r\n                    <Button variant=\"contained\" className='positive-button' onClick={this.sendData} type=\"submit\">{Lang.saveButton}</Button>\r\n                    <Button variant=\"contained\" className='positive-button'>{Lang.previewButton}</Button>\r\n                    <Button variant=\"contained\">{Lang.cancelButton}</Button>\r\n                </div>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditSongForm;\r\n\r\n","import './App.css'\nimport React from 'react'\nimport EditSongForm from './components/EditSong'\n\nfunction App() {\n    return (\n      <div className=\"App\">\n          <EditSongForm />\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}